package hr.sdo.bootcamp.model.service.server.serviceinterface;

import hr.sdo.bootcamp.model.service.common.serviceinterface.HRSDOAppModuleService;
import hr.sdo.bootcamp.model.views.common.SdoDepartmentsViewSDO;
import hr.sdo.bootcamp.model.views.common.SdoEmployeesViewSDO;
import hr.sdo.bootcamp.model.views.common.SdoJobsViewSDO;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 07 11:19:51 CET 2013
// ---------------------------------------------------------------------
@Interceptors( { ServiceContextInterceptor.class })
@Stateless(name="hr.sdo.bootcamp.model.service.common.HRSDOAppModuleServiceBean", mappedName="HRSDOAppModuleServiceBean")
@Remote(HRSDOAppModuleService.class)
@PortableWebService(targetNamespace="/hr/sdo/bootcamp/model/service/common/", serviceName="HRSDOAppModuleService",
    portName="HRSDOAppModuleServiceSoapHttpPort", endpointInterface="hr.sdo.bootcamp.model.service.common.serviceinterface.HRSDOAppModuleService")
public class HRSDOAppModuleServiceImpl extends ServiceImpl implements HRSDOAppModuleService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public HRSDOAppModuleServiceImpl() {
        init();
        setApplicationModuleDefName("hr.sdo.bootcamp.model.service.HRSDOAppModule");
        setConfigurationName("HRSDOAppModuleService");
    }


    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (HRSDOAppModuleServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("hr/sdo/bootcamp/model/service/common/serviceinterface/", "HRSDOAppModuleService.xsd");
                _isInited = true;
            } catch (Exception ex) {
                Diagnostic.printStackTrace(ex);
            }
        }
    }


    /**
     * updateSdoAllDepartments: generated method. Do not modify.
     */
    public SdoDepartmentsViewSDO updateSdoAllDepartments(SdoDepartmentsViewSDO sdoAllDepartments) throws ServiceException {
        return (SdoDepartmentsViewSDO)update(sdoAllDepartments, "SdoAllDepartments");
    }

    /**
     * findSdoAllDepartments: generated method. Do not modify.
     */
    public List<SdoDepartmentsViewSDO> findSdoAllDepartments(FindCriteria findCriteria,
                                                             FindControl findControl) throws ServiceException {
        return (List<SdoDepartmentsViewSDO>)find(findCriteria, findControl, "SdoAllDepartments",
                                                 SdoDepartmentsViewSDO.class);
    }


    /**
     * findSdoAllEmpoyees: generated method. Do not modify.
     */
    public List<SdoEmployeesViewSDO> findSdoAllEmpoyees(FindCriteria findCriteria,
                                                        FindControl findControl) throws ServiceException {
        return (List<SdoEmployeesViewSDO>)find(findCriteria, findControl, "SdoAllEmpoyees", SdoEmployeesViewSDO.class);
    }

    /**
     * findSdoAllJobs: generated method. Do not modify.
     */
    public List<SdoJobsViewSDO> findSdoAllJobs(FindCriteria findCriteria,
                                               FindControl findControl) throws ServiceException {
        return (List<SdoJobsViewSDO>)find(findCriteria, findControl, "SdoAllJobs", SdoJobsViewSDO.class);
    }

    /**
     * getSdoDepartmentByKey: generated method. Do not modify.
     */
    public SdoDepartmentsViewSDO getSdoDepartmentByKey(Integer departmentId) throws ServiceException {
        return (SdoDepartmentsViewSDO)get(new Object[] { departmentId }, "SdoAllDepartments",
                                          SdoDepartmentsViewSDO.class);
    }

    /**
     * getSdoEmployeeByKey: generated method. Do not modify.
     */
    public SdoEmployeesViewSDO getSdoEmployeeByKey(Integer employeeId) throws ServiceException {
        return (SdoEmployeesViewSDO)get(new Object[] { employeeId }, "SdoAllEmpoyees", SdoEmployeesViewSDO.class);
    }
}
